from aiogram import Router
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from infrastructure.db.repositories.deal import DealRepo
from application.deals.service import DealService
from keyboards.reply import main_kb

router = Router()

class ChatForm(StatesGroup):
    in_chat = State()

# 1) –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç
@router.callback_query(lambda c: c.data and c.data.startswith("deal:chat:"))
async def open_chat(cq: CallbackQuery, state: FSMContext):
    _, _, did = cq.data.split(":")
    deal_id = int(did)
    await state.update_data(deal_id=deal_id)
    await state.set_state(ChatForm.in_chat)
    await cq.message.edit_text("üí¨ –í—ã –≤ —á–∞—Ç–µ —Å–¥–µ–ª–∫–∏. –ü–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", reply_markup=None)
    await cq.answer()

# 2) –ü—Ä–∏—ë–º —Å–æ–æ–±—â–µ–Ω–∏–π
@router.message(ChatForm.in_chat)
async def chat_message(msg: Message, state: FSMContext):
    data = await state.get_data()
    deal_id = data["deal_id"]
    sender_id = msg.from_user.id

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    svc = DealService()
    chat_msg = await svc.send_message(deal_id, sender_id, msg.text)

    # TODO: —Ñ–æ—Ä–≤–∞—Ä–¥ –∑–∞–∫–∞–∑—á–∏–∫—É/–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é (–º–æ–∂–Ω–æ –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å chat_id)
    await msg.answer("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
